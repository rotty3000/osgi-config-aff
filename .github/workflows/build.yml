#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

name: CI Build

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
      - next
    tags:
      - '*'
  pull_request:

env:
  LC_ALL: en_US.UTF-8
  IMAGE_NAME: config-osgi-k8s-demo
  DOCKER_USER: ${{ secrets.DOCKER_USER }}

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: ${{ (github.repository != 'rotty3000/osgi-config-aff') || (github.event_name == 'pull_request') }}
      matrix:
        java: [ 17 ]
        os: [ ubuntu-latest ]
    name: JDK${{ matrix.java }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:

    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        check-latest: ${{ endsWith(matrix.java, '-ea') }}
        java-version: ${{ matrix.java }}

    - name: Maven Build
      continue-on-error: ${{ contains(matrix.java, '-ea') }}
      shell: bash
      run: |
        mvn -U -e -B -ntp install

    - name: Build the Docker Image
      if: ${{ !strategy.fail-fast }}
      run: >
        IMAGE_VERSION=${GITHUB_REF##*/};
        docker build --build-arg BASE_DIR=./target/assembly --file Dockerfile --tag $DOCKER_USER/$IMAGE_NAME:${IMAGE_VERSION/main/latest} .;
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin;
        docker push $DOCKER_USER/$IMAGE_NAME:${IMAGE_VERSION/main/latest}

